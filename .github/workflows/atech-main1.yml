name: Security Scan with MSDO

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  msdo-scan:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run Microsoft Security DevOps
      uses: microsoft/security-devops-action@v1.0.0
      with:
        categories: 'code'

    - name: Parse SARIF and send to Azure Monitor
      shell: pwsh
      run: |
        $workspaceId = "${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}"
        $sharedKey = "${{ secrets.LOG_ANALYTICS_SHARED_KEY }}"
        $logType = "SecurityScan"
        $sarifFilePath = "msdo.sarif"

        $sarifContent = Get-Content $sarifFilePath -Raw | ConvertFrom-Json
        $records = @()

        foreach ($run in $sarifContent.runs) {
            foreach ($result in $run.results) {
                $record = @{
                    RuleId = $result.ruleId
                    Message = $result.message.text
                    Level = $result.level
                    FilePath = $result.locations[0].physicalLocation.artifactLocation.uri
                }
                $records += $record
            }
        }

        $jsonBody = $records | ConvertTo-Json -Depth 5

        # Function to send data to Log Analytics
        function Send-DataToLogAnalytics {
            param (
                [string]$WorkspaceId,
                [string]$SharedKey,
                [string]$LogType,
                [string]$JsonBody
            )

            $TimeStamp = Get-Date -Format "r"
            $Signature = Build-Signature -WorkspaceId $WorkspaceId -SharedKey $SharedKey -Date $TimeStamp -ContentLength $JsonBody.Length -Method "POST" -ContentType "application/json" -Resource "/api/logs"
            $Uri = "https://$WorkspaceId.ods.opinsights.azure.com/api/logs?api-version=2016-04-01"

            Invoke-RestMethod -Method Post -Uri $Uri -Headers @{
                "Authorization" = $Signature
                "Log-Type" = $LogType
                "x-ms-date" = $TimeStamp
                "Content-Type" = "application/json"
            } -Body $JsonBody
        }

        # Signature builder function (you may need to define this separately)
        # Call Send-DataToLogAnalytics here
