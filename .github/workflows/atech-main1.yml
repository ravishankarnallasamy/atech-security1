name: Microsoft Security DevOps Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  security-events: write

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Microsoft Security DevOps
        uses: microsoft/security-devops-action@v1
        id: msdo

      - name: Upload SARIF results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.msdo.outputs.sarifFile }}

      - name: Send SARIF to Azure Monitor
        env:
          WORKSPACE_ID: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
          WORKSPACE_KEY: ${{ secrets.LOG_ANALYTICS_PRIMARY_KEY }}
        run: |
          FILE="${{ steps.msdo.outputs.sarifFile }}"
          CONTENT_TYPE="application/json"
          LOG_TYPE="SecurityScan"
          RESOURCE="/api/logs"
          API_VERSION="2016-04-01"
          TIMESTAMP=$(date -u +"%a, %d %b %Y %H:%M:%S GMT")
          FILE_SIZE=$(wc -c < "$FILE")
          STRING_TO_SIGN="POST\n$FILE_SIZE\n$CONTENT_TYPE\nx-ms-date:$TIMESTAMP\n$RESOURCE"

          # Generate HMAC signature using the key as-is (no base64 decoding)
          SIGNATURE=$(echo -n "$STRING_TO_SIGN" | openssl dgst -sha256 -hmac "$WORKSPACE_KEY" -binary | base64)
          AUTH_HEADER="SharedKey $WORKSPACE_ID:$SIGNATURE"

          # Send the SARIF file to Azure Monitor
          curl -X POST "https://$WORKSPACE_ID.ods.opinsights.azure.com$RESOURCE?api-version=$API_VERSION" \
            -H "Content-Type: $CONTENT_TYPE" \
            -H "Log-Type: $LOG_TYPE" \
            -H "x-ms-date: $TIMESTAMP" \
            -H "Authorization: $AUTH_HEADER" \
            --data-binary @"$FILE"
